library("foreign")
df <- read.csv("../data/raw/kddcup/kddcup.data", head=F)
setwd("~/lab/NIDSResearch/R/")
df <- read.csv("../data/raw/kddcup/kddcup.data", head=F)
col_names <- c("duration", "protocol_type", "service", "flag", "src_bytes", "dst_bytes", "land", "wrong_fragment", "urgent",
"hot", "num_failed_logins", "logged_in", "num_compromised", "root_shell", "su_attempted", "num_root",
"num_file_creations", "num_shells", "num_access_files", "num_outbound_cmds", "is_host_login", "is_guest_login",
"count", "srv_count", "serror_rate", "srv_serror_rate", "rerror_rate", "srv_rerror_rate", "same_srv_rate", "diff_srv_rate", "srv_diff_host_rate",
"dst_host_count", "dst_host_srv_count", "dst_host_same_srv_rate", "dst_host_diff_srv_rate",
"dst_host_same_src_port_rate", "dst_host_srv_diff_host_rate", "dst_host_serror_rate",
"dst_host_srv_serror_rate", "dst_host_rerror_rate", "dst_host_srv_rerror_rate", "class")
names(df) <- col_names
df[df$service == "http"]
df[df$service="http",]
df[df$service=="http",]
count(df[df$service=="http",])
len(df[df$service=="http",])
anomalyze <- function(x) {
if (x == "normal.") {
return("normal")
}
else {
return("anomaly")
}
}
df$class <- as.factor(sapply(df$class, anomalyze))
df$class <- as.factor(sapply(df$class, anomalyze))
df.http <- df[df$service=="http",]
df.smtp <- df[df$service=="smtp",]
df.combined <- rbind(df.smtp, df.http)
head(df.combined)
tail(df.combined)
write.arff(df.http, "../data/raw/kddcup/kddcup_http.arff")
write.arff(df.smtp, "../data/raw/kddcup/kddcup_http.arff")
write.arff(df.combined, "../data/raw/kddcup/kddcup_http.arff")
write.arff(df.http, "../data/raw/kddcup/kddcup_http.arff")
write.arff(df.smtp, "../data/raw/kddcup/kddcup_smtp.arff")
write.arff(df.combined, "../data/raw/kddcup/kddcup_combined.arff")
